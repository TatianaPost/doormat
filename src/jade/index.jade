include mixins.jade
doctype html
html
  head
    title doormat | wipe your fingers before you come in!
    meta(name='viewport', content='width=device-width, initial-scale=1.0, user-scalable=0, maximum-scale=1.0')
    meta(http-equiv='Content-Type', content='text/html; charset=utf-8')
    meta(name='description', content='an entry point to your site, wipe your fingers before you come in!')
    link(href='https://fonts.googleapis.com/css?family=Droid+Sans', rel='stylesheet', type='text/css')
    link(rel='stylesheet', href='css/doormat.css')
    link(rel='stylesheet', href='css/dev.css')
    script(type='text/javascript', src='js/doormat.js')
    script(type='text/javascript').
      document.addEventListener('DOMContentLoaded', function() {
        var myDoormat = new Doormat({
          snapping: {
            travel: false,
            viewport: true,
            threshold: 30,
            debounce: 150,
            duration: 250
          }
        });
      });
  body.tx--black
    +doormat()

      +panel('tx--white bg--white header')
        .advice Please scroll üòÅ
        .title.tx--right
          h1 doormat
          +githubStats('jh3y', 'doormat')

      +panel('bg--blue')
        .cntnt-wrppr
          .cntnt
            h1 How about something a little different for navigating through your site content?

      +panel('bg--purple tutorial')
        .cntnt-wrppr
          .cntnt
            h1 How does this work? It's actually quite simple.
            p.
              The trick is possible by making sections of the page <code>position: fixed</code> and then setting a height for the document <code>body</code> equal to the combined height of the page sections.

              When the <code>window</code> is scrolled down we move our page sections upwards out of the viewport to reveal the content underneath. The opposite being that, when the <code>window</code> is scrolled up, we bring our sections back down into view in the same order in which they left(<i>dictated by the DOM structure</i>).

      +panel('bg--red tutorial')
        .cntnt-wrppr
          .cntnt
            h1 Using doormat
            ol
              li Include <code>doormat.js</code> and <code>doormat.css</code> in your page.
              li
                p.
                  Create your DOM structure. The structure needs to be a container with the classname <code>dm</code>. Child elements need to have the classname <code>dm__pnl</code>. <code>ol</code> and <code>ul</code> are appropriate elements.
                pre
                  code.
                    &lt;ol class="dm"&gt;
                      &lt;li class="dm__pnl"&gt;Awesome&lt;/li&gt;
                      &lt;li class="dm__pnl"&gt;Site&lt;/li&gt;
                      &lt;li class="dm__pnl"&gt;Content&lt;/li&gt;
                    &lt;/ol&gt;
              li
                p.
                  Invoke the <code>Doormat</code> function passing in desired options(<i>refer to <a href="https://github.com/jh3y/doormat" target="_blank">docs</a></i>). For example; 
                pre
                  code.
                    var myDoormat = new Doormat();
                    var myDoormat = new Doormat({
                      snapping: {
                        travel: false,
                        viewport: true,
                        threshold: 25,
                        debounce: 100,
                        duration: 250
                      }
                    });
      +panel('bg--teal tutorial')
        .cntnt-wrppr
          .cntnt
            h1 That's it!
            p For more, see the <a href="https://github.com/jh3y/doormat" target="_blank">repo</a>!

    
